stages:
  - build
  - release

variables:
  SERVICE_PORT_2376_TCP_PORT: 2375
  DOCKER_REGISTRY: 711579170580.dkr.ecr.us-east-2.amazonaws.com
  DOCKER_HOST: tcp://docker:2375
  AWS_DEFAULT_REGION: us-east-2
  WEB_ECR_SLUG: portabl-playground-web
  API_ECR_SLUG: portabl-playground-api

build:
  stage: build
  image:
    name: docker:latest
  services:
    - name: docker:20-dind
      alias: docker
      command: ['--tls=false']
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ''
  script:
    - docker build -f apps/web/Dockerfile --build-arg NPM_TOKEN=${NPM_TOKEN} .
    - docker build -f apps/api/Dockerfile --build-arg NPM_TOKEN=${NPM_TOKEN} .
  tags:
    - portabl
    - linux
  rules:
    - if: $CI_COMMIT_TITLE =~ /-draft$/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

release:
  stage: release
  image:
    name: amazon/aws-cli
    entrypoint: ['']
  services:
    - name: docker:20-dind
      alias: docker
      command: ['--tls=false']
  before_script:
    - amazon-linux-extras install docker >> /dev/null
    - aws --version
    - docker --version
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ''
  script:
    - docker build -t "$DOCKER_REGISTRY/$WEB_ECR_SLUG:$CI_COMMIT_TAG" -f apps/web/Dockerfile --build-arg NPM_TOKEN=${NPM_TOKEN} .
    - docker build -t "$DOCKER_REGISTRY/$API_ECR_SLUG:$CI_COMMIT_TAG" -f apps/api/Dockerfile --build-arg NPM_TOKEN=${NPM_TOKEN} .
    - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - docker push "$DOCKER_REGISTRY/$WEB_ECR_SLUG:$CI_COMMIT_TAG"
    - docker push "$DOCKER_REGISTRY/$API_ECR_SLUG:$CI_COMMIT_TAG"
  tags:
    - portabl
    - linux
  rules:
    # commit tag should be a semver
    - if: $CI_COMMIT_TAG =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/
